// Generated by CoffeeScript 1.4.0
(function() {
  var CHECKSUM_CACHED, COMPILED_CACHED, cached, md5, utils, watchr;

  utils = require('../../util');

  md5 = require('MD5');

  watchr = require('watchr');

  CHECKSUM_CACHED = {};

  COMPILED_CACHED = {};

  cached = function(filename) {
    try {
      return CHECKSUM_CACHED[filename] = md5(utils.file.io.read(filename));
    } catch (err) {

    }
  };

  /*
      加速方案
      * 将指定目录 opts.directories 的文件按路径缓存 checksum , 在 module 初始化的时候使用该缓存
      *
  */


  exports.init = function(options) {
    var dir, _dir, _i, _len, _ref, _results;
    _ref = options.directories;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      dir = _ref[_i];
      _dir = utils.path.resolve(options.cwd, dir);
      if (utils.path.exists(_dir) && utils.path.is_directory(_dir)) {
        utils.logger.log("已对 " + _dir + " 进行加速");
        _results.push(watchr.watch({
          paths: [_dir],
          listeners: {
            change: function(evt, filepath, fstat, fprevstat) {
              cached(filepath);
              console.info("已清除cache " + filepath);
              return COMPILED_CACHED[filepath] = null;
            }
          }
        }));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  exports.get_checksum_cache = function(filename) {
    return CHECKSUM_CACHED[filename];
  };

  exports.get_compiled_cache = function(filename) {
    return COMPILED_CACHED[filename];
  };

  exports.set_compiled_cache = function(filename, source) {
    return COMPILED_CACHED[filename] = source;
  };

  exports.init_cached = function(filename) {
    if (CHECKSUM_CACHED[filename]) {
      return;
    }
    return cached(filename);
  };

}).call(this);
