// Generated by CoffeeScript 1.8.0
(function() {
  var CONFIG, do_clean, do_export, load_config, start_export, sysfs, syspath, utils;

  syspath = require('path');

  sysfs = require('fs');

  utils = require('../util');

  exports.usage = "自动化生成fekit.config";

  CONFIG = null;

  load_config = function() {
    var content;
    content = new utils.file.reader().read("fekit.config");
    return CONFIG = JSON.parse(content);
  };

  do_clean = function(dir) {
    var new_export, path, _i, _j, _len, _len1, _ref, _ref1;
    new_export = [];
    _ref = CONFIG["export"];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      path = _ref[_i];
      if (utils.path.exists("" + dir + "/" + path)) {
        new_export.push(path);
      }
    }
    _ref1 = CONFIG["export"];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      path = _ref1[_j];
      if (utils.path.exists("" + dir + "/" + path.path)) {
        new_export.push(path);
      }
    }
    return CONFIG["export"] = new_export;
  };

  start_export = function(dir) {
    return utils.path.each_directory(dir, function(file) {
      if (utils.path.is_directory(file)) {
        start_export(file, dir);
        return;
      }
      if (~file.indexOf(".js") || ~file.indexOf(".css")) {
        return do_export(file);
      }
    }, true);
  };

  do_export = function(file, dir) {
    var content, exist, lines, path, _i, _j, _len, _len1, _ref, _ref1;
    content = new utils.file.reader().read(file);
    lines = content.split("\n");
    file = file.replace(/\\/g, "/");
    file = file.replace("" + dir + "/", "");
    if (lines[0] === "/*[export]*/") {
      _ref = CONFIG["export"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        path = _ref[_i];
        if (path === file) {
          exist = true;
        }
      }
      if (!exist) {
        CONFIG["export"].push(file);
      }
    }
    if (lines[0] === "/*[export noversion]*/") {
      _ref1 = CONFIG["export"];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        path = _ref1[_j];
        if (path.path === file) {
          exist = true;
        }
      }
      if (!exist) {
        return CONFIG["export"].push({
          path: file,
          no_version: true
        });
      }
    }
  };

  exports.run = function(options) {
    var str;
    if (options.dir) {
      load_config();
      do_clean(options.dir);
      start_export(options.dir);
      str = JSON.stringify(CONFIG, null, 4);
      return new utils.file.writer().write("fekit.config", str);
    } else {
      return utils.logger.error("必须使用 --dir 来指定要扫描的文件目录");
    }
  };

}).call(this);
